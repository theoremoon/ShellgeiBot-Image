version: 2.1

executors:
  builder:
    machine:
      image: ubuntu-2204:2023.10.1  # https://circleci.com/docs/configuration-reference/#available-linux-machine-images-cloud
  deployer:
    docker:
      - image: cimg/base:2023.10-22.04  # https://circleci.com/developer/ja/images/image/cimg/base

commands:
  build-image:
    parameters:
      arch:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - egison-<< parameters.arch >>-{{ checksum "egison/Makefile" }}-{{ checksum "egison/build.sh" }}-{{ checksum "egison/Dockerfile" }}
      - run:
          name: Pre-build egison
          command: |
            make -C egison build
      - save_cache:
          key: egison-<< parameters.arch >>-{{ checksum "egison/Makefile" }}-{{ checksum "egison/build.sh" }}-{{ checksum "egison/Dockerfile" }}
          paths: egison/egison-linux-<< parameters.arch>>.tar.gz
      - restore_cache:
          keys:
            - mecab-ipadic-{{ checksum "prefetched/mecab-ipadic/sha1sum.txt" }}
      - run:
          name: Build a docker image
          command: |
            make build-ci
          no_output_timeout: 15m  # デフォルト 10m; apt-get install がタイムアウトするため延長
      - save_cache:
          key: mecab-ipadic-{{ checksum "prefetched/mecab-ipadic/sha1sum.txt" }}
          paths: prefetched/mecab-ipadic/
      - run:
          name: Install test tools
          command: |
            sudo apt update -qq
            sudo apt install -y -qq moreutils
            npm install --global --silent --no-progress tap-xunit
      - run:
          name: Test a docker image
          command: |
            mkdir ~/reports
            make test-ci | pee cat "tap-xunit > ~/reports/result.xml"
      - store_test_results:
          path: ~/reports
      - run: |
          if [ "${CIRCLE_BRANCH}" != "master" ]; then
            circleci-agent step halt
          fi
      - run:
          name: Login to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
      - run:
          name: Push a docker image
          command: |
            docker tag ${DOCKER_IMAGE_NAME}:latest ${DOCKER_IMAGE_NAME}:<< parameters.arch >>
            docker push ${DOCKER_IMAGE_NAME}:<< parameters.arch >>

jobs:
  build-x64:
    executor: builder
    environment:
      DOCKER_BUILDKIT: '1'
      DOCKER_IMAGE_NAME: theoldmoon0602/shellgeibot
    resource_class: large  # 4vCPU, 15GB RAM; https://circleci.com/docs/ja/2.0/configuration-reference/#resourceclass
    steps:
      - build-image:
          arch: amd64

  build-arm64:
    executor: builder
    resource_class: arm.large  # 4vCPU, 16GB RAM; https://circleci.com/docs/ja/2.0/arm-resources/
    environment:
      DOCKER_BUILDKIT: '1'
      DOCKER_IMAGE_NAME: theoldmoon0602/shellgeibot
    steps:
      - build-image:
          arch: arm64

  push-manifest:
    executor: deployer
    environment:
      DOCKER_IMAGE_NAME: theoldmoon0602/shellgeibot
    steps:
      - run:
          name: Login to Docker Hub
          command: |
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
      - run:
          name: update manifest
          command: |
            date_tag=$(date +%Y%m%d)
            docker manifest create ${DOCKER_IMAGE_NAME}:latest ${DOCKER_IMAGE_NAME}:amd64 ${DOCKER_IMAGE_NAME}:arm64 --amend
            docker manifest push ${DOCKER_IMAGE_NAME}:latest
            docker manifest create ${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH} ${DOCKER_IMAGE_NAME}:amd64 ${DOCKER_IMAGE_NAME}:arm64 --amend
            docker manifest push ${DOCKER_IMAGE_NAME}:${CIRCLE_BRANCH}
            docker manifest create ${DOCKER_IMAGE_NAME}:${date_tag} ${DOCKER_IMAGE_NAME}:amd64 ${DOCKER_IMAGE_NAME}:arm64 --amend
            docker manifest push ${DOCKER_IMAGE_NAME}:${date_tag}

  deploy:
    executor: deployer
    environment:
      DOCKER_IMAGE_NAME: theoldmoon0602/shellgeibot
    steps:
      - add_ssh_keys:
          fingerprints:
            - "29:cf:20:0a:41:36:28:49:a2:ef:7c:b3:ae:05:5b:47"
      - deploy:
          name: Apply New Image to Running
          command: |
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              mkdir -pm 700 ~/.ssh
              ssh-keyscan ${SSH_HOST} >> ~/.ssh/known_hosts
              ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "docker pull ${DOCKER_IMAGE_NAME}:master && docker images -qf dangling=true | xargs docker rmi || :"
            fi

workflows:
  version: 2.1
  commit-workflow:
    jobs:
      - build-x64
      - build-arm64
      - push-manifest:
          filters:
            branches:
              only: master
          requires:
            - build-x64
            - build-arm64
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - push-manifest

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: master
    jobs:
      - build-x64
      - build-arm64
      - push-manifest:
          filters:
            branches:
              only: master
          requires:
            - build-x64
            - build-arm64
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - push-manifest
